// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`POST a new json file and check his Content-Type Options: writer.maxSize Should error when body is too large 1`] = `
Object {
  "body": Object {
    "error": "Request Entity Too Large",
    "message": "Request Entity Too Large",
    "statusCode": 413,
  },
  "status": 413,
  "text": "{\\"statusCode\\":413,\\"error\\":\\"Request Entity Too Large\\",\\"message\\":\\"Request Entity Too Large\\"}",
}
`;

exports[`POST a new json file and check his Content-Type Options: writer.maxSize Should honnor Content-Length restriction of policy 1`] = `
Object {
  "body": Object {
    "error": "Request Entity Too Large",
    "message": "Request Entity Too Large",
    "statusCode": 413,
  },
  "status": 413,
  "text": "{\\"statusCode\\":413,\\"error\\":\\"Request Entity Too Large\\",\\"message\\":\\"Request Entity Too Large\\"}",
}
`;

exports[`POST a new json file and check his Content-Type Should return a 403 with an expired token 1`] = `
Object {
  "body": Object {
    "error": "Forbidden",
    "message": "Token is invalid or expired.",
    "statusCode": 403,
  },
  "status": 403,
  "text": "{\\"statusCode\\":403,\\"error\\":\\"Forbidden\\",\\"message\\":\\"Token is invalid or expired.\\"}",
}
`;

exports[`POST a new json file and check his Content-Type Should return a 403 with an invalid access key 1`] = `
Object {
  "body": Object {
    "error": "Forbidden",
    "message": "Access key is invalid.",
    "statusCode": 403,
  },
  "status": 403,
  "text": "{\\"statusCode\\":403,\\"error\\":\\"Forbidden\\",\\"message\\":\\"Access key is invalid.\\"}",
}
`;

exports[`POST a new json file and check his Content-Type Should return a 403 with an invalid conditions Invalid content-type 1`] = `
Object {
  "body": Object {
    "data": Object {
      "key": "content-type",
      "type": "INVALID_KEY",
    },
    "error": "Bad Request",
    "message": "Invalid value for key: content-type",
    "statusCode": 400,
  },
  "status": 400,
  "text": "{\\"statusCode\\":400,\\"error\\":\\"Bad Request\\",\\"message\\":\\"Invalid value for key: content-type\\",\\"data\\":{\\"key\\":\\"content-type\\",\\"type\\":\\"INVALID_KEY\\"}}",
}
`;

exports[`POST a new json file and check his Content-Type Should return a 403 with an invalid conditions Invalid key 1`] = `
Object {
  "body": Object {
    "data": Object {
      "key": "key",
      "type": "INVALID_KEY",
    },
    "error": "Bad Request",
    "message": "Invalid value for key: key",
    "statusCode": 400,
  },
  "status": 400,
  "text": "{\\"statusCode\\":400,\\"error\\":\\"Bad Request\\",\\"message\\":\\"Invalid value for key: key\\",\\"data\\":{\\"key\\":\\"key\\",\\"type\\":\\"INVALID_KEY\\"}}",
}
`;

exports[`POST a new json file and check his Content-Type Should return a 403 with an invalid secret 1`] = `
Object {
  "body": Object {
    "error": "Forbidden",
    "message": "Token is invalid or expired.",
    "statusCode": 403,
  },
  "status": 403,
  "text": "{\\"statusCode\\":403,\\"error\\":\\"Forbidden\\",\\"message\\":\\"Token is invalid or expired.\\"}",
}
`;
